@model ConoPizzaWeb.Models.Feedback.Feedback
@{
    ViewData["Title"] = "ConoPizza Feedback";
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .feedback-container {
            background: #ffffff;
            max-width: 800px;
            margin: 8rem auto 0 auto;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);
        }

        .form-header {
            text-align: center;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 2px solid #eee;
        }

        .form-section {
            margin-bottom: 2.5rem;
            padding: 1.5rem;
            background: #f9fafb;
            border-radius: 10px;
        }

        .rating-container {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            margin: 1.5rem 0;
        }

        .rating-card {
            flex: 1;
            min-width: 150px;
            padding: 1.5rem;
            text-align: center;
            background: white;
            border: 2px solid #eee;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .rating-card:hover {
                transform: translateY(-3px);
                border-color: #ff6b6b;
            }

            .rating-card.active {
                border-color: #ff6b6b;
                background: #fff5f5;
            }

        .rating-emoji {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }

        .form-control-custom {
            border-radius: 8px;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            transition: all 0.3s ease;
        }

            .form-control-custom:focus {
                border-color: #ff6b6b;
                box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.15);
            }

        .submit-btn {
            width: 100%;
            padding: 15px;
            font-size: 1.1rem;
            background: #ff6b6b;
            border: none;
            border-radius: 8px;
            color: white;
            transition: all 0.3s ease;
            cursor: pointer; 
        }

            .submit-btn:hover {
                background: #ff5252;
                transform: translateY(-2px);
            }

        .character-counter {
            font-size: 0.9rem;
            color: #666;
            text-align: right;
            margin-top: 0.5rem;
        }

        .section-title {
            color: #2d3748;
            margin-bottom: 1.2rem;
            font-size: 1.2rem;
            font-weight: 600;
        }

        .validation-summary {
            background: #fff5f5;
            border: 2px solid #fed7d7;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }
        .mb-3{
            margin-bottom:1rem;
        }
        .row{
            display: flex; /* Makes child elements flexible */
            flex-wrap: wrap; /* Ensures items wrap on smaller screens */
        }

        .col-md-6 {
            flex: 0 0 100%; /* Takes full width on small screens */
            max-width: 100%;
        }

        .g-3{
            gap:1rem;
        }

        @@media (max-width: 768px) {
         .col-md-6{
            flex: 0 0 50%; /* Take half of the row */
            max-width: 50%;
         }

        }

    </style>
}

<div class="feedback-container">
    <div class="form-header">
        <h1>How was your ConoPizza experience?</h1>
        <p class="text-muted">Your feedback helps us improve our service!</p>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div asp-validation-summary="ModelOnly" class="validation-summary"></div>

    <form method="post" id="feedbackForm">
        @Html.AntiForgeryToken()

        <div class="form-section">
            <h3 class="section-title">About You</h3>
            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="Emri" class="form-label">Your Name</label>
                    <input asp-for="Emri" class="form-control form-control-custom"
                           placeholder="John Doe">
                    <span asp-validation-for="Emri" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Email" class="form-label">Email Address</label>
                    <input asp-for="Email" type="email" class="form-control form-control-custom"
                           placeholder="john@example.com">
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="form-section">
            <h3 class="section-title">Your Experience</h3>
            <label asp-for="RatingStars" class="form-label">Overall Satisfaction</label>
            <div class="rating-container">
                <div class="rating-card" data-rating="1">
                    <div class="rating-emoji">😠</div>
                    <div class="rating-text">Very Poor</div>
                </div>
                <div class="rating-card" data-rating="2">
                    <div class="rating-emoji">😞</div>
                    <div class="rating-text">Below Average</div>
                </div>
                <div class="rating-card" data-rating="3">
                    <div class="rating-emoji">😐</div>
                    <div class="rating-text">Average</div>
                </div>
                <div class="rating-card" data-rating="4">
                    <div class="rating-emoji">😊</div>
                    <div class="rating-text">Good</div>
                </div>
                <div class="rating-card" data-rating="5">
                    <div class="rating-emoji">😍</div>
                    <div class="rating-text">Excellent</div>
                </div>
            </div>

            <input type="hidden" asp-for="RatingStars" value="0" /> <!-- Set default value -->
            <span asp-validation-for="RatingStars" class="text-danger"></span>
        </div>

        <div class="form-section">
            <h3 class="section-title">Feedback Details</h3>
            <div class="mb-3">
                <label asp-for="Subject" class="form-label">Feedback Category</label>
                <select asp-for="Subject" class="form-select form-control-custom">
                    <option value="">Select a category</option>
                    <option>Delivery Experience</option>
                    <option>Food Quality</option>
                    <option>Packaging</option>
                    <option>Customer Service</option>
                    <option>Other</option>
                </select>
                <span asp-validation-for="Subject" class="text-danger"></span>
            </div>

            <div class="mb-3" style="display: grid; gap: .5rem;">
                <label asp-for="Mesazhi" class="form-label">Additional Comments</label>
                <textarea asp-for="Mesazhi" class="form-control form-control-custom"
                          rows="4" placeholder="What could we improve?"></textarea>
                <div class="character-counter">
                    <span id="charCount">0</span>/1000 characters
                </div>
                <span asp-validation-for="Mesazhi" class="text-danger"></span>
            </div>
        </div>

        <button type="submit" class="submit-btn">
            <i class="fas fa-paper-plane me-2"></i>Submit Feedback
        </button>
    </form>
</div>

@section Scripts {
    <script>
                // Rating Cards Click Event
        document.querySelectorAll('.rating-card').forEach(card => {
            card.addEventListener('click', function () {
                // Remove 'active' class from all cards
                document.querySelectorAll('.rating-card').forEach(c => c.classList.remove('active'));

                // Add 'active' class to selected card
                this.classList.add('active');

                // Set the hidden input value
                document.getElementById('RatingStars').value = this.getAttribute("data-rating");
            });
        });

        // Character Counter
        const messageField = document.getElementById('Mesazhi');
        const charCount = document.getElementById('charCount');

        messageField.addEventListener('input', () => {
            charCount.textContent = messageField.value.length;
        });

               // Form Submission Validation
        document.getElementById('feedbackForm').addEventListener('submit', function (e) {
            const ratingInput = document.getElementById('RatingStars');
            const ratingValue = parseInt(ratingInput.value, 10); // Convert to integer

            if (isNaN(ratingValue) || ratingValue < 1 || ratingValue > 5) {
                e.preventDefault(); // Prevent form submission
                showAlert('Please select a valid rating (1-5) before submitting.',error);
            }
        });
    </script>
}